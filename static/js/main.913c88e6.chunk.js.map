{"version":3,"sources":["store/reducer.js","data.js","components/Item.js","components/Catalog.js","components/Header.js","components/ItemView.js","components/Main.js","components/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","initialState","data","reducer","state","action","type","payload","ContextApp","React","createContext","id","title","photo","vendor","pack","price","Item","props","onClick","Card","bg","key","text","style","width","className","Header","Img","variant","src","Body","Title","Text","Catalog","useContext","dispatch","history","useHistory","useEffect","Promise","resolve","reject","setTimeout","then","res","onClickItem","push","length","map","item","Navbar","Brand","href","Toggle","Collapse","ItemView","useParams","useState","setItem","fetchingItem","find","i","border","Main","PageNotFound","Alert","App","useReducer","Provider","value","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.913c88e6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const TYPES = {\n  GET_DATA: 'GET_DATA',\n  SET_DATA: 'SET_DATA',\n\n}\n\nexport const initialState = {\n  data: []\n};\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case TYPES.SET_DATA:\n      return { ...state, data: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const ContextApp = React.createContext();\n","export const data = [\n  {\n    id: '00001',\n    title: 'Автоматический выключатель 10A',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'ABB',\n    pack: 100,\n    price: 1500\n  },\n  {\n    id: '00002',\n    title: 'Автоматический выключатель 20A',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'ABB',\n    pack: 100,\n    price: 1500\n  },\n  {\n    id: '00003',\n    title: 'Корпус металлический',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'ABB',\n    pack: 1,\n    price: 6800\n  },\n  {\n    id: '00004',\n    title: 'Корпус пластиковый',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'IEK',\n    pack: 1,\n    price: 1200\n  },\n  {\n    id: '00005',\n    title: 'Шина медная МТ 60х8',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'DKC',\n    pack: 1,\n    price: 1200\n  },\n  {\n    id: '00006',\n    title: 'DLP Кабель - канал 105x50',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'DKC',\n    pack: 1,\n    price: 350\n  },\n  {\n    id: '00007',\n    title: 'DLP Кабель - канал 80x50',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'DKC',\n    pack: 1,\n    price: 300\n  },\n  {\n    id: '00008',\n    title: 'ЭТЮД Выключатель одноклавишный',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'Schneider Electric',\n    pack: 1,\n    price: 85\n  },\n  {\n    id: '00009',\n    title: 'Контактор E 12А катушка управления 220В',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'Schneider Electric',\n    pack: 1,\n    price: 3800\n  },\n  {\n    id: '00010',\n    title: 'Лоток для систем освещения',\n    photo: 'https://electroguru.ru/pic/9/57/c4015b7f368e6b4871809f49debe0.jpg',\n    vendor: 'Schneider Electric',\n    pack: 1,\n    price: 1859\n  }\n\n]\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nexport const Item = (props) => {\n  const { id, title, vendor, pack, price, photo, onClick } = props;\n  return (\n    <Card\n      bg='primary'\n      key={id}\n      text='white'\n      style={{ width: '20rem' }}\n      className=\"m-2 card-style\"\n      onClick={() => onClick(id)}\n    >\n      <Card.Header>{title}</Card.Header>\n      <Card.Img variant='top' src={photo} />\n      <Card.Body>\n        <Card.Title>{vendor} </Card.Title>\n        <Card.Text>\n          <div>Pack: {pack}</div>\n          <div>Price: {price}</div>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport {ContextApp, TYPES} from '../store/reducer'\nimport {data} from '../data'\nimport { Item } from './Item';\n\nexport const Catalog = (props) => {\n  const { state, dispatch } = useContext(ContextApp);\n  const history = useHistory();\n  useEffect(() => {\n    const p = new Promise((resolve, reject) => {\n      setTimeout(() => resolve(data), 1500)\n    })\n    p.then(res => dispatch({ type: TYPES.SET_DATA, payload: res }))\n  }, []);\n\n  const onClickItem = (id) => {\n    history.push(`/catalog/${id}`)\n  }\n\n  const renderItems = () => {\n    return state.data.map((item) => <Item key={item.id} {...item} onClick={onClickItem}/>)\n  }\n\n  return (\n      <div className='catalog padding20-10'>\n        {state.data.length > 0 ? renderItems() : 'Loading...'}\n      </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap'\n\nexport const Header = (props) => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"/etm\">Главная</Navbar.Brand>\n      <Navbar.Brand href=\"/etm/catalog\">Каталог</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          ЭТМ: тестовое задание\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { data } from '../data';\n\nexport const ItemView = (props) => {\n  const { id } = useParams();\n  const [item, setItem] = useState(null);\n  useEffect( () => {\n    setTimeout( () => setItem(fetchingItem()), 1000)\n  })\n  \n  const fetchingItem = () => {\n    return data.find(i => i.id === id)\n  }\n\n  if (!item) return 'Loading...'\n\n  return (\n    <div className='item-view'>\n      <Card border=\"primary\" style={{width: '360px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Img src={item.photo}/>\n        <Card.Body>\n          <Card.Title>{item.vendor}</Card.Title>\n          <Card.Text>\n            <div>Pack: {item.pack}</div>\n            <div>Price: {item.price}</div>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n","import React from 'react';\n\n\nexport const Main = (props) => {\n  return (\n    <div className='padding20-10'>\n      <h2>Главное меню</h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport {Alert} from 'react-bootstrap'\n\nexport const PageNotFound = () => {\n    return (\n        <Alert variant='warning'>\n            Page not found =(\n        </Alert>\n    );\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useReducer } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Catalog } from './components/Catalog';\nimport { Header } from './components/Header';\nimport { ItemView } from './components/ItemView';\nimport { Main } from './components/Main';\nimport { PageNotFound } from './components/PageNotFound';\nimport './index.css';\nimport { ContextApp, initialState, reducer } from './store/reducer';\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <div>\n      <ContextApp.Provider value={{ dispatch, state }}>\n        <Header />\n        <Router basename='/etm'>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ItemView} />\n            <Route exact path='/' component={Main} />\n            <Route path='*' component={PageNotFound} />\n          </Switch>\n        </Router>\n      </ContextApp.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}